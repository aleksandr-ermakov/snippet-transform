///////////////////////////////////////////////////////////////////
//
// Модуль-перечисления, типы блоков подставновки шаблонов
//
// (с) BIA Technologies, LLC	
//
///////////////////////////////////////////////////////////////////

Перем Кэш;

///////////////////////////////////////////////////////////////////
// Программный интерфейс
///////////////////////////////////////////////////////////////////

// Проверяет, является ли строка числом
//
// Параметры:
//   Строка - Строка - Проверяемая строка
//
//  Возвращаемое значение:
//   Булево - Истина - число, Ложь - нет
//
Функция ЭтоЧисло(Строка) Экспорт
	
	Возврат Кэш["ПроверкаЧисло"].Совпадает(Строка);

КонецФункции

// Удаляет последовательности символов в начале и конце строки
//
// Параметры:
//   Текст - Строка - Анализируемый текст
//   Символы - Строка - Строка удаляемых символов
//
//  Возвращаемое значение:
//   Строка - Строка с удаленными символами
//
Функция УдалитьСимволыВНачалеИКонце(Знач Текст, Символы) Экспорт
	
	Ключ = "УдалитьСимволыВНачалеИКонце-" + Символы;
	
	Если Кэш[Ключ] = Неопределено Тогда
		
		Шаблон = СтрШаблон("^[%1]*(.*?)[%1]*$", ЭкранироватьСлужебныеСимволыRegExp(Символы));
		
		Кэш.Вставить(Ключ, Новый РегулярноеВыражение(Шаблон));

	КонецЕсли;

	Возврат Кэш[Ключ].Заменить(Текст, "$1");

КонецФункции

// Удаляет из строки символы
//
// Параметры:
//   Текст - Строка - Анализируемый текст
//   Символы - Строка - Строка удаляемых символов
//
//  Возвращаемое значение:
//   Строка - Строка с удаленными символами
//
Функция УдалитьСимволы(Знач Текст, УдаляемыеСимволы) Экспорт
	
	// Не корректно работает СтрРазделить https://github.com/EvilBeaver/OneScript/pull/851/commits
	// Должно заработать на следующем релизе oscript 1.0.22
	// Части = СтрРазделить(Текст, УдаляемыеСимволы);
	
	// Возврат СтрСоединить(Части, "");
	
	Ключ = "УдалитьСимволы" + УдаляемыеСимволы;
	Если Кэш[Ключ] = Неопределено Тогда
		
		Шаблон = СтрШаблон("[%1]", ЭкранироватьСлужебныеСимволыRegExp(УдаляемыеСимволы));
		
		Кэш.Вставить(Ключ, Новый РегулярноеВыражение(Шаблон));

	КонецЕсли;

	Возврат Кэш[Ключ].Заменить(Текст, "");
	
КонецФункции

// На основании массива значений формирует соответствие, в качестве значения используется "ЗначениеФлага"
//
// Параметры:
//   Массив - Массив - Коллекция произвольных значений
//   ЗначениеФлага - Произвольный - Значение соответствия
//
//  Возвращаемое значение:
//   Соответствие - Соответствие флагов
//
Функция СоответствиеФлагов(Массив, ЗначениеФлага = Истина) Экспорт
	
	Результат = Новый Соответствие();
	
	Для Каждого Элемент Из Массив Цикл
		
		Результат.Вставить(Элемент, ЗначениеФлага);
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// Формирует имя переменной в формате CamelCase
//
// Параметры:
//   Текст - Строка - Текст на основании, которого будет сформировано имя переменной
//
//  Возвращаемое значение:
//   Строка - Имя переменной
//
Функция СформироватьИдентификатор(Текст) Экспорт
	
	Строка = "";
	
	Для Каждого Совпадение Из Кэш["Слова"].НайтиСовпадения(Текст) Цикл
		
		Строка = Строка + ВРег(Лев(Совпадение.Значение, 1)) + Сред(Совпадение.Значение, 2);
		
	КонецЦикла;
	
	Возврат Строка;

КонецФункции

// Выделяет из текста слова
//
// Параметры:
//   Строка - Строка - Анализируемый тест
//   ВернутьТакжеПозицию - Булево - Истина - формирует массив структур, содержащих инф о положении слова в тексте
//
//  Возвращаемое значение:
//   Массив - Массив слов
//
Функция ПолучитьСлова(Строка, ВернутьТакжеПозицию = Ложь) Экспорт

	Слова = Новый Массив();
	
	Для Каждого Совпадение Из Кэш["Слова"].НайтиСовпадения(Строка) Цикл
		
		Если ВернутьТакжеПозицию Тогда
			Слова.Добавить(Новый Структура("Слово, Начало, Окончание", Совпадение.Значение, Совпадение.Индекс, Совпадение.Индекс + Совпадение.Длина));
		Иначе
			Слова.Добавить(Совпадение.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Слова;

КонецФункции

Функция ЭкранироватьСлужебныеСимволыRegExp(Символы)

	СлужебныеСимволыРегулярногоВыражения = "^$.[]\";
	
	Результат = "";

	Для Инд = 1 По СтрДлина(Символы) Цикл
		
		Символ = Сред(Символы, Инд, 1);
		
		Если СтрНайти(СлужебныеСимволыРегулярногоВыражения, Символ) Тогда
			
			Результат = СтрШаблон("%1\%2", Результат, Символ);
			
		Иначе
			
			Результат = Результат + Символ;
			
		КонецЕсли;
		
	КонецЦикла;

	Возврат Результат;

КонецФункции

Кэш = Новый Соответствие();
Кэш.Вставить("ПроверкаЧисло", Новый РегулярноеВыражение("^\d+$"));
Кэш.Вставить("ФиксТекстЗамены", Новый РегулярноеВыражение("[\[\]]"));
Кэш.Вставить("Слова", Новый РегулярноеВыражение("[\w\dА-Яа-я]+"));
